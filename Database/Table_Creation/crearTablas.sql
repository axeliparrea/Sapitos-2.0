-- ========================================
-- 1. ROGELIO'S SUPER COOL TABLES
-- ========================================

-- 1.1 Tabla de Roles
CREATE TABLE Rol2 (
    Rol_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL
);

-- 1.2 Tabla de Locations
CREATE TABLE Location2 (
    Location_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre NVARCHAR(100),
    Tipo NVARCHAR(50),
    PosicionX INTEGER,
    PosicionY INTEGER,
    FechaCreado DATE
);

-- 1.3 Tabla de Usuarios
CREATE TABLE Usuario2 (
    Usuario_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Correo NVARCHAR(255),
    Username NVARCHAR(100),
    Nombre NVARCHAR(100) NOT NULL,
    Rol_ID INTEGER,
    Clave NVARCHAR(255) NOT NULL,
    Location_ID INTEGER,
    FechaEmpiezo DATE,
    RFC NVARCHAR(13),
    FOREIGN KEY (Rol_ID) REFERENCES Rol2(Rol_ID),
    FOREIGN KEY (Location_ID) REFERENCES Location2(Location_ID)
);

-- 1.4 Tabla de Artículos
CREATE TABLE Articulo2 (
    Articulo_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL,
    Categoria NVARCHAR(100),
    PrecioProveedor DECIMAL(10,2),
    PrecioVenta DECIMAL(10,2),
    Temporada NVARCHAR(50)
);

-- 1.5 Tabla de Inventario
CREATE TABLE Inventario2 (
    Inventario_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Articulo_ID INTEGER,
    Location_ID INTEGER,
    StockActual INTEGER,
    Importacion INTEGER,
    Exportacion INTEGER,
    StockMinimo INTEGER,
    StockRecomendado INTEGER,
    FechaUltimaImportacion DATE,
    FechaUltimaExportacion DATE,
    MargenGanancia DECIMAL(5,2),
    TiempoReposicion DECIMAL(5,2),
    StockSeguridad INTEGER,
    DemandaPromedio DECIMAL(5,2),
    FOREIGN KEY (Articulo_ID) REFERENCES Articulo2(Articulo_ID),
    FOREIGN KEY (Location_ID) REFERENCES Location2(Location_ID)
);

-- 1.6 Tabla de Fabricación
CREATE TABLE Fabricacion2 (
    Fabricacion_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Location_ID INTEGER,
    Articulo_ID INTEGER,
    FOREIGN KEY (Location_ID) REFERENCES Location2(Location_ID),
    FOREIGN KEY (Articulo_ID) REFERENCES Articulo2(Articulo_ID)
);

-- 1.7 Tabla de Métodos de Pago
CREATE TABLE MetodoPago2 (
    MetodoPago_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre NVARCHAR(100) NOT NULL
);

-- 1.8 Tabla de Órdenes
CREATE TABLE Ordenes2 (
    Orden_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Creado_por_ID INTEGER,
    Modificado_por_ID INTEGER,
    TipoOrden NVARCHAR(50),
    Organizacion NVARCHAR(100),
    FechaCreacion DATE,
    FechaAceptacion DATE,
    FechaLimitePago DATE,
    FechaEstimadaEntrega DATE,
    FechaEntrega DATE,
    EntregaATiempo BOOLEAN,
    Estado NVARCHAR(50),
    Total DECIMAL(10,2),
    MetodoPago_ID INTEGER,
    DescuentoAplicado DECIMAL(5,2),
    TiempoReposicion DECIMAL(5,2),
    TiempoEntrega DECIMAL(5,2),
    FOREIGN KEY (Creado_por_ID) REFERENCES Usuario2(Usuario_ID),
    FOREIGN KEY (Modificado_por_ID) REFERENCES Usuario2(Usuario_ID),
    FOREIGN KEY (MetodoPago_ID) REFERENCES MetodoPago2(MetodoPago_ID)
);

-- 1.9 Tabla de OrdenesProductos
CREATE TABLE OrdenesProductos2 (
    OrdenesProductos_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Orden_ID INTEGER,
    Inventario_ID INTEGER,
    Cantidad INTEGER,
    PrecioUnitario DECIMAL(10,2),
    FOREIGN KEY (Orden_ID) REFERENCES Ordenes2(Orden_ID),
    FOREIGN KEY (Inventario_ID) REFERENCES Inventario2(Inventario_ID)
);

-- 1.10 Tabla de Comentarios de Órdenes
CREATE TABLE ComentariosOrdenes2 (
    Comentario_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Orden_ID INTEGER,
    Creado_por_ID INTEGER,
    Comentario NCLOB,
    FechaCreado TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Orden_ID) REFERENCES Ordenes2(Orden_ID),
    FOREIGN KEY (Creado_por_ID) REFERENCES Usuario2(Usuario_ID)
);

-- 1.11 Tabla de Pagos por Orden
CREATE TABLE PagoOrden2 (
    Pago_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Orden_ID INTEGER,
    MetodoPago_ID INTEGER,
    EstadoPago NVARCHAR(50),
    ComentarioPago NCLOB,
    FechaPago DATE,
    DescuentoAplicado DECIMAL(5,2),
    FOREIGN KEY (Orden_ID) REFERENCES Ordenes2(Orden_ID),
    FOREIGN KEY (MetodoPago_ID) REFERENCES MetodoPago2(MetodoPago_ID)
);

-- 1.12 Tabla de Historial de Productos
CREATE TABLE HistorialProductos2 (
    Historial_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Inventario_ID INTEGER,
    Location_ID INTEGER,
    Anio INTEGER,
    Mes INTEGER,
    Importacion INTEGER,
    Exportacion INTEGER,
    StockStart INTEGER,
    StockEnd INTEGER,
    FOREIGN KEY (Inventario_ID) REFERENCES Inventario2(Inventario_ID),
    FOREIGN KEY (Location_ID) REFERENCES Location2(Location_ID)
);

-- 1.13 Tabla de Alertas
CREATE TABLE Alertas2 (
    Alerta_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Descripcion NCLOB,
    FechaCreacion DATE,
    OrdenesProductos_ID INTEGER,
    Location_ID INTEGER,
    FOREIGN KEY (OrdenesProductos_ID) REFERENCES OrdenesProductos2(OrdenesProductos_ID),
    FOREIGN KEY (Location_ID) REFERENCES Location2(Location_ID)
);

-- 1.14 Tabla Bitácora Maestra
CREATE TABLE Bitacora_Maestra2 (
    Bitacora_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Nombre NVARCHAR(100)
);

-- 1.15 Tabla Bitácora General
CREATE TABLE Bitacora_General2 (
    General_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MaestraID INTEGER,
    CampoID INTEGER,
    Nombre NVARCHAR(100),
    Descripcion NCLOB,
    FOREIGN KEY (MaestraID) REFERENCES Bitacora_Maestra2(Bitacora_ID)
);
